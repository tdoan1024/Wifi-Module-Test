ARM GAS  C:\Users\tdoan1\AppData\Local\Temp\ccVV4Oz1.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_TXISR,"ax",%progbits
  20              		.align	2
  21              		.global	UART_TXISR
  22              		.code	16
  23              		.thumb_func
  24              		.type	UART_TXISR, %function
  25              	UART_TXISR:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\UART_INT.c"
   1:Generated_Source\PSoC4/UART_INT.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/UART_INT.c **** * File Name: UARTINT.c
   3:Generated_Source\PSoC4/UART_INT.c **** * Version 2.50
   4:Generated_Source\PSoC4/UART_INT.c **** *
   5:Generated_Source\PSoC4/UART_INT.c **** * Description:
   6:Generated_Source\PSoC4/UART_INT.c **** *  This file provides all Interrupt Service functionality of the UART component
   7:Generated_Source\PSoC4/UART_INT.c **** *
   8:Generated_Source\PSoC4/UART_INT.c **** ********************************************************************************
   9:Generated_Source\PSoC4/UART_INT.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC4/UART_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC4/UART_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC4/UART_INT.c **** * the software package with which this file was provided.
  13:Generated_Source\PSoC4/UART_INT.c **** *******************************************************************************/
  14:Generated_Source\PSoC4/UART_INT.c **** 
  15:Generated_Source\PSoC4/UART_INT.c **** #include "UART.h"
  16:Generated_Source\PSoC4/UART_INT.c **** #include "cyapicallbacks.h"
  17:Generated_Source\PSoC4/UART_INT.c **** 
  18:Generated_Source\PSoC4/UART_INT.c **** 
  19:Generated_Source\PSoC4/UART_INT.c **** /***************************************
  20:Generated_Source\PSoC4/UART_INT.c **** * Custom Declarations
  21:Generated_Source\PSoC4/UART_INT.c **** ***************************************/
  22:Generated_Source\PSoC4/UART_INT.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  23:Generated_Source\PSoC4/UART_INT.c **** 
  24:Generated_Source\PSoC4/UART_INT.c **** /* `#END` */
  25:Generated_Source\PSoC4/UART_INT.c **** 
  26:Generated_Source\PSoC4/UART_INT.c **** #if (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED))
  27:Generated_Source\PSoC4/UART_INT.c ****     /*******************************************************************************
  28:Generated_Source\PSoC4/UART_INT.c ****     * Function Name: UART_RXISR
  29:Generated_Source\PSoC4/UART_INT.c ****     ********************************************************************************
  30:Generated_Source\PSoC4/UART_INT.c ****     *
ARM GAS  C:\Users\tdoan1\AppData\Local\Temp\ccVV4Oz1.s 			page 2


  31:Generated_Source\PSoC4/UART_INT.c ****     * Summary:
  32:Generated_Source\PSoC4/UART_INT.c ****     *  Interrupt Service Routine for RX portion of the UART
  33:Generated_Source\PSoC4/UART_INT.c ****     *
  34:Generated_Source\PSoC4/UART_INT.c ****     * Parameters:
  35:Generated_Source\PSoC4/UART_INT.c ****     *  None.
  36:Generated_Source\PSoC4/UART_INT.c ****     *
  37:Generated_Source\PSoC4/UART_INT.c ****     * Return:
  38:Generated_Source\PSoC4/UART_INT.c ****     *  None.
  39:Generated_Source\PSoC4/UART_INT.c ****     *
  40:Generated_Source\PSoC4/UART_INT.c ****     * Global Variables:
  41:Generated_Source\PSoC4/UART_INT.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
  42:Generated_Source\PSoC4/UART_INT.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
  43:Generated_Source\PSoC4/UART_INT.c ****     *     increments after each byte saved to buffer.
  44:Generated_Source\PSoC4/UART_INT.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
  45:Generated_Source\PSoC4/UART_INT.c ****     *     checked to detect overflow condition.
  46:Generated_Source\PSoC4/UART_INT.c ****     *  UART_rxBufferOverflow - software overflow flag. Set to one
  47:Generated_Source\PSoC4/UART_INT.c ****     *     when UART_rxBufferWrite index overtakes
  48:Generated_Source\PSoC4/UART_INT.c ****     *     UART_rxBufferRead index.
  49:Generated_Source\PSoC4/UART_INT.c ****     *  UART_rxBufferLoopDetect - additional variable to detect overflow.
  50:Generated_Source\PSoC4/UART_INT.c ****     *     Set to one when UART_rxBufferWrite is equal to
  51:Generated_Source\PSoC4/UART_INT.c ****     *    UART_rxBufferRead
  52:Generated_Source\PSoC4/UART_INT.c ****     *  UART_rxAddressMode - this variable contains the Address mode,
  53:Generated_Source\PSoC4/UART_INT.c ****     *     selected in customizer or set by UART_SetRxAddressMode() API.
  54:Generated_Source\PSoC4/UART_INT.c ****     *  UART_rxAddressDetected - set to 1 when correct address received,
  55:Generated_Source\PSoC4/UART_INT.c ****     *     and analysed to store following addressed data bytes to the buffer.
  56:Generated_Source\PSoC4/UART_INT.c ****     *     When not correct address received, set to 0 to skip following data bytes.
  57:Generated_Source\PSoC4/UART_INT.c ****     *
  58:Generated_Source\PSoC4/UART_INT.c ****     *******************************************************************************/
  59:Generated_Source\PSoC4/UART_INT.c ****     CY_ISR(UART_RXISR)
  60:Generated_Source\PSoC4/UART_INT.c ****     {
  61:Generated_Source\PSoC4/UART_INT.c ****         uint8 readData;
  62:Generated_Source\PSoC4/UART_INT.c ****         uint8 readStatus;
  63:Generated_Source\PSoC4/UART_INT.c ****         uint8 increment_pointer = 0u;
  64:Generated_Source\PSoC4/UART_INT.c **** 
  65:Generated_Source\PSoC4/UART_INT.c ****     #if(CY_PSOC3)
  66:Generated_Source\PSoC4/UART_INT.c ****         uint8 int_en;
  67:Generated_Source\PSoC4/UART_INT.c ****     #endif /* (CY_PSOC3) */
  68:Generated_Source\PSoC4/UART_INT.c **** 
  69:Generated_Source\PSoC4/UART_INT.c ****     #ifdef UART_RXISR_ENTRY_CALLBACK
  70:Generated_Source\PSoC4/UART_INT.c ****         UART_RXISR_EntryCallback();
  71:Generated_Source\PSoC4/UART_INT.c ****     #endif /* UART_RXISR_ENTRY_CALLBACK */
  72:Generated_Source\PSoC4/UART_INT.c **** 
  73:Generated_Source\PSoC4/UART_INT.c ****         /* User code required at start of ISR */
  74:Generated_Source\PSoC4/UART_INT.c ****         /* `#START UART_RXISR_START` */
  75:Generated_Source\PSoC4/UART_INT.c **** 
  76:Generated_Source\PSoC4/UART_INT.c ****         /* `#END` */
  77:Generated_Source\PSoC4/UART_INT.c **** 
  78:Generated_Source\PSoC4/UART_INT.c ****     #if(CY_PSOC3)   /* Make sure nested interrupt is enabled */
  79:Generated_Source\PSoC4/UART_INT.c ****         int_en = EA;
  80:Generated_Source\PSoC4/UART_INT.c ****         CyGlobalIntEnable;
  81:Generated_Source\PSoC4/UART_INT.c ****     #endif /* (CY_PSOC3) */
  82:Generated_Source\PSoC4/UART_INT.c **** 
  83:Generated_Source\PSoC4/UART_INT.c ****         do
  84:Generated_Source\PSoC4/UART_INT.c ****         {
  85:Generated_Source\PSoC4/UART_INT.c ****             /* Read receiver status register */
  86:Generated_Source\PSoC4/UART_INT.c ****             readStatus = UART_RXSTATUS_REG;
  87:Generated_Source\PSoC4/UART_INT.c ****             /* Copy the same status to readData variable for backward compatibility support 
ARM GAS  C:\Users\tdoan1\AppData\Local\Temp\ccVV4Oz1.s 			page 3


  88:Generated_Source\PSoC4/UART_INT.c ****             *  of the user code in UART_RXISR_ERROR` section. 
  89:Generated_Source\PSoC4/UART_INT.c ****             */
  90:Generated_Source\PSoC4/UART_INT.c ****             readData = readStatus;
  91:Generated_Source\PSoC4/UART_INT.c **** 
  92:Generated_Source\PSoC4/UART_INT.c ****             if((readStatus & (UART_RX_STS_BREAK | 
  93:Generated_Source\PSoC4/UART_INT.c ****                             UART_RX_STS_PAR_ERROR |
  94:Generated_Source\PSoC4/UART_INT.c ****                             UART_RX_STS_STOP_ERROR | 
  95:Generated_Source\PSoC4/UART_INT.c ****                             UART_RX_STS_OVERRUN)) != 0u)
  96:Generated_Source\PSoC4/UART_INT.c ****             {
  97:Generated_Source\PSoC4/UART_INT.c ****                 /* ERROR handling. */
  98:Generated_Source\PSoC4/UART_INT.c ****                 UART_errorStatus |= readStatus & ( UART_RX_STS_BREAK | 
  99:Generated_Source\PSoC4/UART_INT.c ****                                                             UART_RX_STS_PAR_ERROR | 
 100:Generated_Source\PSoC4/UART_INT.c ****                                                             UART_RX_STS_STOP_ERROR | 
 101:Generated_Source\PSoC4/UART_INT.c ****                                                             UART_RX_STS_OVERRUN);
 102:Generated_Source\PSoC4/UART_INT.c ****                 /* `#START UART_RXISR_ERROR` */
 103:Generated_Source\PSoC4/UART_INT.c **** 
 104:Generated_Source\PSoC4/UART_INT.c ****                 /* `#END` */
 105:Generated_Source\PSoC4/UART_INT.c ****                 
 106:Generated_Source\PSoC4/UART_INT.c ****             #ifdef UART_RXISR_ERROR_CALLBACK
 107:Generated_Source\PSoC4/UART_INT.c ****                 UART_RXISR_ERROR_Callback();
 108:Generated_Source\PSoC4/UART_INT.c ****             #endif /* UART_RXISR_ERROR_CALLBACK */
 109:Generated_Source\PSoC4/UART_INT.c ****             }
 110:Generated_Source\PSoC4/UART_INT.c ****             
 111:Generated_Source\PSoC4/UART_INT.c ****             if((readStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 112:Generated_Source\PSoC4/UART_INT.c ****             {
 113:Generated_Source\PSoC4/UART_INT.c ****                 /* Read data from the RX data register */
 114:Generated_Source\PSoC4/UART_INT.c ****                 readData = UART_RXDATA_REG;
 115:Generated_Source\PSoC4/UART_INT.c ****             #if (UART_RXHW_ADDRESS_ENABLED)
 116:Generated_Source\PSoC4/UART_INT.c ****                 if(UART_rxAddressMode == (uint8)UART__B_UART__AM_SW_DETECT_TO_BUFFER)
 117:Generated_Source\PSoC4/UART_INT.c ****                 {
 118:Generated_Source\PSoC4/UART_INT.c ****                     if((readStatus & UART_RX_STS_MRKSPC) != 0u)
 119:Generated_Source\PSoC4/UART_INT.c ****                     {
 120:Generated_Source\PSoC4/UART_INT.c ****                         if ((readStatus & UART_RX_STS_ADDR_MATCH) != 0u)
 121:Generated_Source\PSoC4/UART_INT.c ****                         {
 122:Generated_Source\PSoC4/UART_INT.c ****                             UART_rxAddressDetected = 1u;
 123:Generated_Source\PSoC4/UART_INT.c ****                         }
 124:Generated_Source\PSoC4/UART_INT.c ****                         else
 125:Generated_Source\PSoC4/UART_INT.c ****                         {
 126:Generated_Source\PSoC4/UART_INT.c ****                             UART_rxAddressDetected = 0u;
 127:Generated_Source\PSoC4/UART_INT.c ****                         }
 128:Generated_Source\PSoC4/UART_INT.c ****                     }
 129:Generated_Source\PSoC4/UART_INT.c ****                     if(UART_rxAddressDetected != 0u)
 130:Generated_Source\PSoC4/UART_INT.c ****                     {   /* Store only addressed data */
 131:Generated_Source\PSoC4/UART_INT.c ****                         UART_rxBuffer[UART_rxBufferWrite] = readData;
 132:Generated_Source\PSoC4/UART_INT.c ****                         increment_pointer = 1u;
 133:Generated_Source\PSoC4/UART_INT.c ****                     }
 134:Generated_Source\PSoC4/UART_INT.c ****                 }
 135:Generated_Source\PSoC4/UART_INT.c ****                 else /* Without software addressing */
 136:Generated_Source\PSoC4/UART_INT.c ****                 {
 137:Generated_Source\PSoC4/UART_INT.c ****                     UART_rxBuffer[UART_rxBufferWrite] = readData;
 138:Generated_Source\PSoC4/UART_INT.c ****                     increment_pointer = 1u;
 139:Generated_Source\PSoC4/UART_INT.c ****                 }
 140:Generated_Source\PSoC4/UART_INT.c ****             #else  /* Without addressing */
 141:Generated_Source\PSoC4/UART_INT.c ****                 UART_rxBuffer[UART_rxBufferWrite] = readData;
 142:Generated_Source\PSoC4/UART_INT.c ****                 increment_pointer = 1u;
 143:Generated_Source\PSoC4/UART_INT.c ****             #endif /* (UART_RXHW_ADDRESS_ENABLED) */
 144:Generated_Source\PSoC4/UART_INT.c **** 
ARM GAS  C:\Users\tdoan1\AppData\Local\Temp\ccVV4Oz1.s 			page 4


 145:Generated_Source\PSoC4/UART_INT.c ****                 /* Do not increment buffer pointer when skip not addressed data */
 146:Generated_Source\PSoC4/UART_INT.c ****                 if(increment_pointer != 0u)
 147:Generated_Source\PSoC4/UART_INT.c ****                 {
 148:Generated_Source\PSoC4/UART_INT.c ****                     if(UART_rxBufferLoopDetect != 0u)
 149:Generated_Source\PSoC4/UART_INT.c ****                     {   /* Set Software Buffer status Overflow */
 150:Generated_Source\PSoC4/UART_INT.c ****                         UART_rxBufferOverflow = 1u;
 151:Generated_Source\PSoC4/UART_INT.c ****                     }
 152:Generated_Source\PSoC4/UART_INT.c ****                     /* Set next pointer. */
 153:Generated_Source\PSoC4/UART_INT.c ****                     UART_rxBufferWrite++;
 154:Generated_Source\PSoC4/UART_INT.c **** 
 155:Generated_Source\PSoC4/UART_INT.c ****                     /* Check pointer for a loop condition */
 156:Generated_Source\PSoC4/UART_INT.c ****                     if(UART_rxBufferWrite >= UART_RX_BUFFER_SIZE)
 157:Generated_Source\PSoC4/UART_INT.c ****                     {
 158:Generated_Source\PSoC4/UART_INT.c ****                         UART_rxBufferWrite = 0u;
 159:Generated_Source\PSoC4/UART_INT.c ****                     }
 160:Generated_Source\PSoC4/UART_INT.c **** 
 161:Generated_Source\PSoC4/UART_INT.c ****                     /* Detect pre-overload condition and set flag */
 162:Generated_Source\PSoC4/UART_INT.c ****                     if(UART_rxBufferWrite == UART_rxBufferRead)
 163:Generated_Source\PSoC4/UART_INT.c ****                     {
 164:Generated_Source\PSoC4/UART_INT.c ****                         UART_rxBufferLoopDetect = 1u;
 165:Generated_Source\PSoC4/UART_INT.c ****                         /* When Hardware Flow Control selected */
 166:Generated_Source\PSoC4/UART_INT.c ****                         #if (UART_FLOW_CONTROL != 0u)
 167:Generated_Source\PSoC4/UART_INT.c ****                             /* Disable RX interrupt mask, it is enabled when user read data from th
 168:Generated_Source\PSoC4/UART_INT.c ****                             UART_RXSTATUS_MASK_REG  &= (uint8)~UART_RX_STS_FIFO_NOTEMPTY;
 169:Generated_Source\PSoC4/UART_INT.c ****                             CyIntClearPending(UART_RX_VECT_NUM);
 170:Generated_Source\PSoC4/UART_INT.c ****                             break; /* Break the reading of the FIFO loop, leave the data there for 
 171:Generated_Source\PSoC4/UART_INT.c ****                         #endif /* (UART_FLOW_CONTROL != 0u) */
 172:Generated_Source\PSoC4/UART_INT.c ****                     }
 173:Generated_Source\PSoC4/UART_INT.c ****                 }
 174:Generated_Source\PSoC4/UART_INT.c ****             }
 175:Generated_Source\PSoC4/UART_INT.c ****         }while((readStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u);
 176:Generated_Source\PSoC4/UART_INT.c **** 
 177:Generated_Source\PSoC4/UART_INT.c ****         /* User code required at end of ISR (Optional) */
 178:Generated_Source\PSoC4/UART_INT.c ****         /* `#START UART_RXISR_END` */
 179:Generated_Source\PSoC4/UART_INT.c **** 
 180:Generated_Source\PSoC4/UART_INT.c ****         /* `#END` */
 181:Generated_Source\PSoC4/UART_INT.c **** 
 182:Generated_Source\PSoC4/UART_INT.c ****     #ifdef UART_RXISR_EXIT_CALLBACK
 183:Generated_Source\PSoC4/UART_INT.c ****         UART_RXISR_ExitCallback();
 184:Generated_Source\PSoC4/UART_INT.c ****     #endif /* UART_RXISR_EXIT_CALLBACK */
 185:Generated_Source\PSoC4/UART_INT.c **** 
 186:Generated_Source\PSoC4/UART_INT.c ****     #if(CY_PSOC3)
 187:Generated_Source\PSoC4/UART_INT.c ****         EA = int_en;
 188:Generated_Source\PSoC4/UART_INT.c ****     #endif /* (CY_PSOC3) */
 189:Generated_Source\PSoC4/UART_INT.c ****     }
 190:Generated_Source\PSoC4/UART_INT.c ****     
 191:Generated_Source\PSoC4/UART_INT.c **** #endif /* (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED)) */
 192:Generated_Source\PSoC4/UART_INT.c **** 
 193:Generated_Source\PSoC4/UART_INT.c **** 
 194:Generated_Source\PSoC4/UART_INT.c **** #if (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED)
 195:Generated_Source\PSoC4/UART_INT.c ****     /*******************************************************************************
 196:Generated_Source\PSoC4/UART_INT.c ****     * Function Name: UART_TXISR
 197:Generated_Source\PSoC4/UART_INT.c ****     ********************************************************************************
 198:Generated_Source\PSoC4/UART_INT.c ****     *
 199:Generated_Source\PSoC4/UART_INT.c ****     * Summary:
 200:Generated_Source\PSoC4/UART_INT.c ****     * Interrupt Service Routine for the TX portion of the UART
 201:Generated_Source\PSoC4/UART_INT.c ****     *
ARM GAS  C:\Users\tdoan1\AppData\Local\Temp\ccVV4Oz1.s 			page 5


 202:Generated_Source\PSoC4/UART_INT.c ****     * Parameters:
 203:Generated_Source\PSoC4/UART_INT.c ****     *  None.
 204:Generated_Source\PSoC4/UART_INT.c ****     *
 205:Generated_Source\PSoC4/UART_INT.c ****     * Return:
 206:Generated_Source\PSoC4/UART_INT.c ****     *  None.
 207:Generated_Source\PSoC4/UART_INT.c ****     *
 208:Generated_Source\PSoC4/UART_INT.c ****     * Global Variables:
 209:Generated_Source\PSoC4/UART_INT.c ****     *  UART_txBuffer - RAM buffer pointer for transmit data from.
 210:Generated_Source\PSoC4/UART_INT.c ****     *  UART_txBufferRead - cyclic index for read and transmit data
 211:Generated_Source\PSoC4/UART_INT.c ****     *     from txBuffer, increments after each transmitted byte.
 212:Generated_Source\PSoC4/UART_INT.c ****     *  UART_rxBufferWrite - cyclic index for write to txBuffer,
 213:Generated_Source\PSoC4/UART_INT.c ****     *     checked to detect available for transmission bytes.
 214:Generated_Source\PSoC4/UART_INT.c ****     *
 215:Generated_Source\PSoC4/UART_INT.c ****     *******************************************************************************/
 216:Generated_Source\PSoC4/UART_INT.c ****     CY_ISR(UART_TXISR)
 217:Generated_Source\PSoC4/UART_INT.c ****     {
  28              		.loc 1 217 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 218:Generated_Source\PSoC4/UART_INT.c ****     #if(CY_PSOC3)
 219:Generated_Source\PSoC4/UART_INT.c ****         uint8 int_en;
 220:Generated_Source\PSoC4/UART_INT.c ****     #endif /* (CY_PSOC3) */
 221:Generated_Source\PSoC4/UART_INT.c **** 
 222:Generated_Source\PSoC4/UART_INT.c ****     #ifdef UART_TXISR_ENTRY_CALLBACK
 223:Generated_Source\PSoC4/UART_INT.c ****         UART_TXISR_EntryCallback();
 224:Generated_Source\PSoC4/UART_INT.c ****     #endif /* UART_TXISR_ENTRY_CALLBACK */
 225:Generated_Source\PSoC4/UART_INT.c **** 
 226:Generated_Source\PSoC4/UART_INT.c ****         /* User code required at start of ISR */
 227:Generated_Source\PSoC4/UART_INT.c ****         /* `#START UART_TXISR_START` */
 228:Generated_Source\PSoC4/UART_INT.c **** 
 229:Generated_Source\PSoC4/UART_INT.c ****         /* `#END` */
 230:Generated_Source\PSoC4/UART_INT.c **** 
 231:Generated_Source\PSoC4/UART_INT.c ****     #if(CY_PSOC3)   /* Make sure nested interrupt is enabled */
 232:Generated_Source\PSoC4/UART_INT.c ****         int_en = EA;
 233:Generated_Source\PSoC4/UART_INT.c ****         CyGlobalIntEnable;
 234:Generated_Source\PSoC4/UART_INT.c ****     #endif /* (CY_PSOC3) */
 235:Generated_Source\PSoC4/UART_INT.c **** 
 236:Generated_Source\PSoC4/UART_INT.c ****         while((UART_txBufferRead != UART_txBufferWrite) &&
  33              		.loc 1 236 0
  34 0000 13E0     		b	.L2
  35              	.L5:
 237:Generated_Source\PSoC4/UART_INT.c ****              ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u))
 238:Generated_Source\PSoC4/UART_INT.c ****         {
 239:Generated_Source\PSoC4/UART_INT.c ****             /* Check pointer wrap around */
 240:Generated_Source\PSoC4/UART_INT.c ****             if(UART_txBufferRead >= UART_TX_BUFFER_SIZE)
  36              		.loc 1 240 0
  37 0002 104B     		ldr	r3, .L6
  38 0004 1B78     		ldrb	r3, [r3]
  39 0006 DBB2     		uxtb	r3, r3
  40 0008 272B     		cmp	r3, #39
  41 000a 02D9     		bls	.L3
 241:Generated_Source\PSoC4/UART_INT.c ****             {
 242:Generated_Source\PSoC4/UART_INT.c ****                 UART_txBufferRead = 0u;
  42              		.loc 1 242 0
  43 000c 0022     		movs	r2, #0
ARM GAS  C:\Users\tdoan1\AppData\Local\Temp\ccVV4Oz1.s 			page 6


  44 000e 0D4B     		ldr	r3, .L6
  45 0010 1A70     		strb	r2, [r3]
  46              	.L3:
 243:Generated_Source\PSoC4/UART_INT.c ****             }
 244:Generated_Source\PSoC4/UART_INT.c **** 
 245:Generated_Source\PSoC4/UART_INT.c ****             UART_TXDATA_REG = UART_txBuffer[UART_txBufferRead];
  47              		.loc 1 245 0
  48 0012 0C4A     		ldr	r2, .L6
  49 0014 1378     		ldrb	r3, [r2]
  50 0016 DBB2     		uxtb	r3, r3
  51 0018 0B49     		ldr	r1, .L6+4
  52 001a CB5C     		ldrb	r3, [r1, r3]
  53 001c DBB2     		uxtb	r3, r3
  54 001e 0B49     		ldr	r1, .L6+8
  55 0020 0B70     		strb	r3, [r1]
 246:Generated_Source\PSoC4/UART_INT.c **** 
 247:Generated_Source\PSoC4/UART_INT.c ****             /* Set next pointer */
 248:Generated_Source\PSoC4/UART_INT.c ****             UART_txBufferRead++;
  56              		.loc 1 248 0
  57 0022 1378     		ldrb	r3, [r2]
  58 0024 0133     		adds	r3, r3, #1
  59 0026 DBB2     		uxtb	r3, r3
  60 0028 1370     		strb	r3, [r2]
  61              	.L2:
 236:Generated_Source\PSoC4/UART_INT.c ****              ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u))
  62              		.loc 1 236 0
  63 002a 064B     		ldr	r3, .L6
  64 002c 1B78     		ldrb	r3, [r3]
  65 002e DBB2     		uxtb	r3, r3
  66 0030 074A     		ldr	r2, .L6+12
  67 0032 1278     		ldrb	r2, [r2]
  68 0034 9342     		cmp	r3, r2
  69 0036 03D0     		beq	.L1
 237:Generated_Source\PSoC4/UART_INT.c ****         {
  70              		.loc 1 237 0 discriminator 1
  71 0038 064B     		ldr	r3, .L6+16
  72 003a 1B78     		ldrb	r3, [r3]
 236:Generated_Source\PSoC4/UART_INT.c ****              ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u))
  73              		.loc 1 236 0 discriminator 1
  74 003c 5B07     		lsls	r3, r3, #29
  75 003e E0D5     		bpl	.L5
  76              	.L1:
 249:Generated_Source\PSoC4/UART_INT.c ****         }
 250:Generated_Source\PSoC4/UART_INT.c **** 
 251:Generated_Source\PSoC4/UART_INT.c ****         /* User code required at end of ISR (Optional) */
 252:Generated_Source\PSoC4/UART_INT.c ****         /* `#START UART_TXISR_END` */
 253:Generated_Source\PSoC4/UART_INT.c **** 
 254:Generated_Source\PSoC4/UART_INT.c ****         /* `#END` */
 255:Generated_Source\PSoC4/UART_INT.c **** 
 256:Generated_Source\PSoC4/UART_INT.c ****     #ifdef UART_TXISR_EXIT_CALLBACK
 257:Generated_Source\PSoC4/UART_INT.c ****         UART_TXISR_ExitCallback();
 258:Generated_Source\PSoC4/UART_INT.c ****     #endif /* UART_TXISR_EXIT_CALLBACK */
 259:Generated_Source\PSoC4/UART_INT.c **** 
 260:Generated_Source\PSoC4/UART_INT.c ****     #if(CY_PSOC3)
 261:Generated_Source\PSoC4/UART_INT.c ****         EA = int_en;
 262:Generated_Source\PSoC4/UART_INT.c ****     #endif /* (CY_PSOC3) */
 263:Generated_Source\PSoC4/UART_INT.c ****    }
ARM GAS  C:\Users\tdoan1\AppData\Local\Temp\ccVV4Oz1.s 			page 7


  77              		.loc 1 263 0
  78              		@ sp needed
  79 0040 7047     		bx	lr
  80              	.L7:
  81 0042 C046     		.align	2
  82              	.L6:
  83 0044 00000000 		.word	UART_txBufferRead
  84 0048 00000000 		.word	UART_txBuffer
  85 004c 43000F40 		.word	1074724931
  86 0050 00000000 		.word	UART_txBufferWrite
  87 0054 63000F40 		.word	1074724963
  88              		.cfi_endproc
  89              	.LFE0:
  90              		.size	UART_TXISR, .-UART_TXISR
  91              		.text
  92              	.Letext0:
  93              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
  94              		.file 3 "Generated_Source\\PSoC4\\UART.h"
  95              		.section	.debug_info,"",%progbits
  96              	.Ldebug_info0:
  97 0000 F2000000 		.4byte	0xf2
  98 0004 0400     		.2byte	0x4
  99 0006 00000000 		.4byte	.Ldebug_abbrev0
 100 000a 04       		.byte	0x4
 101 000b 01       		.uleb128 0x1
 102 000c 07010000 		.4byte	.LASF19
 103 0010 0C       		.byte	0xc
 104 0011 BF010000 		.4byte	.LASF20
 105 0015 2E000000 		.4byte	.LASF21
 106 0019 00000000 		.4byte	.Ldebug_ranges0+0
 107 001d 00000000 		.4byte	0
 108 0021 00000000 		.4byte	.Ldebug_line0
 109 0025 02       		.uleb128 0x2
 110 0026 01       		.byte	0x1
 111 0027 06       		.byte	0x6
 112 0028 A8010000 		.4byte	.LASF0
 113 002c 02       		.uleb128 0x2
 114 002d 01       		.byte	0x1
 115 002e 08       		.byte	0x8
 116 002f D2000000 		.4byte	.LASF1
 117 0033 02       		.uleb128 0x2
 118 0034 02       		.byte	0x2
 119 0035 05       		.byte	0x5
 120 0036 ED010000 		.4byte	.LASF2
 121 003a 02       		.uleb128 0x2
 122 003b 02       		.byte	0x2
 123 003c 07       		.byte	0x7
 124 003d 95010000 		.4byte	.LASF3
 125 0041 02       		.uleb128 0x2
 126 0042 04       		.byte	0x4
 127 0043 05       		.byte	0x5
 128 0044 E5000000 		.4byte	.LASF4
 129 0048 02       		.uleb128 0x2
 130 0049 04       		.byte	0x4
 131 004a 07       		.byte	0x7
 132 004b A3000000 		.4byte	.LASF5
 133 004f 02       		.uleb128 0x2
ARM GAS  C:\Users\tdoan1\AppData\Local\Temp\ccVV4Oz1.s 			page 8


 134 0050 08       		.byte	0x8
 135 0051 05       		.byte	0x5
 136 0052 00000000 		.4byte	.LASF6
 137 0056 02       		.uleb128 0x2
 138 0057 08       		.byte	0x8
 139 0058 07       		.byte	0x7
 140 0059 B5000000 		.4byte	.LASF7
 141 005d 03       		.uleb128 0x3
 142 005e 04       		.byte	0x4
 143 005f 05       		.byte	0x5
 144 0060 696E7400 		.ascii	"int\000"
 145 0064 02       		.uleb128 0x2
 146 0065 04       		.byte	0x4
 147 0066 07       		.byte	0x7
 148 0067 0E000000 		.4byte	.LASF8
 149 006b 04       		.uleb128 0x4
 150 006c 9D000000 		.4byte	.LASF12
 151 0070 02       		.byte	0x2
 152 0071 E401     		.2byte	0x1e4
 153 0073 2C000000 		.4byte	0x2c
 154 0077 02       		.uleb128 0x2
 155 0078 04       		.byte	0x4
 156 0079 04       		.byte	0x4
 157 007a CC000000 		.4byte	.LASF9
 158 007e 02       		.uleb128 0x2
 159 007f 08       		.byte	0x8
 160 0080 04       		.byte	0x4
 161 0081 00010000 		.4byte	.LASF10
 162 0085 02       		.uleb128 0x2
 163 0086 01       		.byte	0x1
 164 0087 08       		.byte	0x8
 165 0088 E0000000 		.4byte	.LASF11
 166 008c 04       		.uleb128 0x4
 167 008d F7010000 		.4byte	.LASF13
 168 0091 02       		.byte	0x2
 169 0092 8E02     		.2byte	0x28e
 170 0094 98000000 		.4byte	0x98
 171 0098 05       		.uleb128 0x5
 172 0099 6B000000 		.4byte	0x6b
 173 009d 02       		.uleb128 0x2
 174 009e 08       		.byte	0x8
 175 009f 04       		.byte	0x4
 176 00a0 E1010000 		.4byte	.LASF14
 177 00a4 02       		.uleb128 0x2
 178 00a5 04       		.byte	0x4
 179 00a6 07       		.byte	0x7
 180 00a7 FC010000 		.4byte	.LASF15
 181 00ab 06       		.uleb128 0x6
 182 00ac B4010000 		.4byte	.LASF22
 183 00b0 01       		.byte	0x1
 184 00b1 D8       		.byte	0xd8
 185 00b2 00000000 		.4byte	.LFB0
 186 00b6 58000000 		.4byte	.LFE0-.LFB0
 187 00ba 01       		.uleb128 0x1
 188 00bb 9C       		.byte	0x9c
 189 00bc 07       		.uleb128 0x7
 190 00bd 98000000 		.4byte	0x98
ARM GAS  C:\Users\tdoan1\AppData\Local\Temp\ccVV4Oz1.s 			page 9


 191 00c1 CC000000 		.4byte	0xcc
 192 00c5 08       		.uleb128 0x8
 193 00c6 A4000000 		.4byte	0xa4
 194 00ca 27       		.byte	0x27
 195 00cb 00       		.byte	0
 196 00cc 09       		.uleb128 0x9
 197 00cd 05020000 		.4byte	.LASF16
 198 00d1 03       		.byte	0x3
 199 00d2 3801     		.2byte	0x138
 200 00d4 D8000000 		.4byte	0xd8
 201 00d8 05       		.uleb128 0x5
 202 00d9 BC000000 		.4byte	0xbc
 203 00dd 09       		.uleb128 0x9
 204 00de EE000000 		.4byte	.LASF17
 205 00e2 03       		.byte	0x3
 206 00e3 3901     		.2byte	0x139
 207 00e5 98000000 		.4byte	0x98
 208 00e9 09       		.uleb128 0x9
 209 00ea 1B000000 		.4byte	.LASF18
 210 00ee 03       		.byte	0x3
 211 00ef 3A01     		.2byte	0x13a
 212 00f1 6B000000 		.4byte	0x6b
 213 00f5 00       		.byte	0
 214              		.section	.debug_abbrev,"",%progbits
 215              	.Ldebug_abbrev0:
 216 0000 01       		.uleb128 0x1
 217 0001 11       		.uleb128 0x11
 218 0002 01       		.byte	0x1
 219 0003 25       		.uleb128 0x25
 220 0004 0E       		.uleb128 0xe
 221 0005 13       		.uleb128 0x13
 222 0006 0B       		.uleb128 0xb
 223 0007 03       		.uleb128 0x3
 224 0008 0E       		.uleb128 0xe
 225 0009 1B       		.uleb128 0x1b
 226 000a 0E       		.uleb128 0xe
 227 000b 55       		.uleb128 0x55
 228 000c 17       		.uleb128 0x17
 229 000d 11       		.uleb128 0x11
 230 000e 01       		.uleb128 0x1
 231 000f 10       		.uleb128 0x10
 232 0010 17       		.uleb128 0x17
 233 0011 00       		.byte	0
 234 0012 00       		.byte	0
 235 0013 02       		.uleb128 0x2
 236 0014 24       		.uleb128 0x24
 237 0015 00       		.byte	0
 238 0016 0B       		.uleb128 0xb
 239 0017 0B       		.uleb128 0xb
 240 0018 3E       		.uleb128 0x3e
 241 0019 0B       		.uleb128 0xb
 242 001a 03       		.uleb128 0x3
 243 001b 0E       		.uleb128 0xe
 244 001c 00       		.byte	0
 245 001d 00       		.byte	0
 246 001e 03       		.uleb128 0x3
 247 001f 24       		.uleb128 0x24
ARM GAS  C:\Users\tdoan1\AppData\Local\Temp\ccVV4Oz1.s 			page 10


 248 0020 00       		.byte	0
 249 0021 0B       		.uleb128 0xb
 250 0022 0B       		.uleb128 0xb
 251 0023 3E       		.uleb128 0x3e
 252 0024 0B       		.uleb128 0xb
 253 0025 03       		.uleb128 0x3
 254 0026 08       		.uleb128 0x8
 255 0027 00       		.byte	0
 256 0028 00       		.byte	0
 257 0029 04       		.uleb128 0x4
 258 002a 16       		.uleb128 0x16
 259 002b 00       		.byte	0
 260 002c 03       		.uleb128 0x3
 261 002d 0E       		.uleb128 0xe
 262 002e 3A       		.uleb128 0x3a
 263 002f 0B       		.uleb128 0xb
 264 0030 3B       		.uleb128 0x3b
 265 0031 05       		.uleb128 0x5
 266 0032 49       		.uleb128 0x49
 267 0033 13       		.uleb128 0x13
 268 0034 00       		.byte	0
 269 0035 00       		.byte	0
 270 0036 05       		.uleb128 0x5
 271 0037 35       		.uleb128 0x35
 272 0038 00       		.byte	0
 273 0039 49       		.uleb128 0x49
 274 003a 13       		.uleb128 0x13
 275 003b 00       		.byte	0
 276 003c 00       		.byte	0
 277 003d 06       		.uleb128 0x6
 278 003e 2E       		.uleb128 0x2e
 279 003f 00       		.byte	0
 280 0040 3F       		.uleb128 0x3f
 281 0041 19       		.uleb128 0x19
 282 0042 03       		.uleb128 0x3
 283 0043 0E       		.uleb128 0xe
 284 0044 3A       		.uleb128 0x3a
 285 0045 0B       		.uleb128 0xb
 286 0046 3B       		.uleb128 0x3b
 287 0047 0B       		.uleb128 0xb
 288 0048 27       		.uleb128 0x27
 289 0049 19       		.uleb128 0x19
 290 004a 11       		.uleb128 0x11
 291 004b 01       		.uleb128 0x1
 292 004c 12       		.uleb128 0x12
 293 004d 06       		.uleb128 0x6
 294 004e 40       		.uleb128 0x40
 295 004f 18       		.uleb128 0x18
 296 0050 9742     		.uleb128 0x2117
 297 0052 19       		.uleb128 0x19
 298 0053 00       		.byte	0
 299 0054 00       		.byte	0
 300 0055 07       		.uleb128 0x7
 301 0056 01       		.uleb128 0x1
 302 0057 01       		.byte	0x1
 303 0058 49       		.uleb128 0x49
 304 0059 13       		.uleb128 0x13
ARM GAS  C:\Users\tdoan1\AppData\Local\Temp\ccVV4Oz1.s 			page 11


 305 005a 01       		.uleb128 0x1
 306 005b 13       		.uleb128 0x13
 307 005c 00       		.byte	0
 308 005d 00       		.byte	0
 309 005e 08       		.uleb128 0x8
 310 005f 21       		.uleb128 0x21
 311 0060 00       		.byte	0
 312 0061 49       		.uleb128 0x49
 313 0062 13       		.uleb128 0x13
 314 0063 2F       		.uleb128 0x2f
 315 0064 0B       		.uleb128 0xb
 316 0065 00       		.byte	0
 317 0066 00       		.byte	0
 318 0067 09       		.uleb128 0x9
 319 0068 34       		.uleb128 0x34
 320 0069 00       		.byte	0
 321 006a 03       		.uleb128 0x3
 322 006b 0E       		.uleb128 0xe
 323 006c 3A       		.uleb128 0x3a
 324 006d 0B       		.uleb128 0xb
 325 006e 3B       		.uleb128 0x3b
 326 006f 05       		.uleb128 0x5
 327 0070 49       		.uleb128 0x49
 328 0071 13       		.uleb128 0x13
 329 0072 3F       		.uleb128 0x3f
 330 0073 19       		.uleb128 0x19
 331 0074 3C       		.uleb128 0x3c
 332 0075 19       		.uleb128 0x19
 333 0076 00       		.byte	0
 334 0077 00       		.byte	0
 335 0078 00       		.byte	0
 336              		.section	.debug_aranges,"",%progbits
 337 0000 1C000000 		.4byte	0x1c
 338 0004 0200     		.2byte	0x2
 339 0006 00000000 		.4byte	.Ldebug_info0
 340 000a 04       		.byte	0x4
 341 000b 00       		.byte	0
 342 000c 0000     		.2byte	0
 343 000e 0000     		.2byte	0
 344 0010 00000000 		.4byte	.LFB0
 345 0014 58000000 		.4byte	.LFE0-.LFB0
 346 0018 00000000 		.4byte	0
 347 001c 00000000 		.4byte	0
 348              		.section	.debug_ranges,"",%progbits
 349              	.Ldebug_ranges0:
 350 0000 00000000 		.4byte	.LFB0
 351 0004 58000000 		.4byte	.LFE0
 352 0008 00000000 		.4byte	0
 353 000c 00000000 		.4byte	0
 354              		.section	.debug_line,"",%progbits
 355              	.Ldebug_line0:
 356 0000 7C000000 		.section	.debug_str,"MS",%progbits,1
 356      02004F00 
 356      00000201 
 356      FB0E0D00 
 356      01010101 
 357              	.LASF6:
ARM GAS  C:\Users\tdoan1\AppData\Local\Temp\ccVV4Oz1.s 			page 12


 358 0000 6C6F6E67 		.ascii	"long long int\000"
 358      206C6F6E 
 358      6720696E 
 358      7400
 359              	.LASF8:
 360 000e 756E7369 		.ascii	"unsigned int\000"
 360      676E6564 
 360      20696E74 
 360      00
 361              	.LASF18:
 362 001b 55415254 		.ascii	"UART_txBufferWrite\000"
 362      5F747842 
 362      75666665 
 362      72577269 
 362      746500
 363              	.LASF21:
 364 002e 5C5C6D79 		.ascii	"\\\\myhome01.spu.edu\\users\\tdoan1\\Documents\\PSo"
 364      686F6D65 
 364      30312E73 
 364      70752E65 
 364      64755C75 
 365 005b 43204372 		.ascii	"C Creator\\PSoC 4 Wi-Fi Module tEst\\PSoC 4 Wi-Fi M"
 365      6561746F 
 365      725C5053 
 365      6F432034 
 365      2057692D 
 366 008c 6F64756C 		.ascii	"odule Test.cydsn\000"
 366      65205465 
 366      73742E63 
 366      7964736E 
 366      00
 367              	.LASF12:
 368 009d 75696E74 		.ascii	"uint8\000"
 368      3800
 369              	.LASF5:
 370 00a3 6C6F6E67 		.ascii	"long unsigned int\000"
 370      20756E73 
 370      69676E65 
 370      6420696E 
 370      7400
 371              	.LASF7:
 372 00b5 6C6F6E67 		.ascii	"long long unsigned int\000"
 372      206C6F6E 
 372      6720756E 
 372      7369676E 
 372      65642069 
 373              	.LASF9:
 374 00cc 666C6F61 		.ascii	"float\000"
 374      7400
 375              	.LASF1:
 376 00d2 756E7369 		.ascii	"unsigned char\000"
 376      676E6564 
 376      20636861 
 376      7200
 377              	.LASF11:
 378 00e0 63686172 		.ascii	"char\000"
 378      00
ARM GAS  C:\Users\tdoan1\AppData\Local\Temp\ccVV4Oz1.s 			page 13


 379              	.LASF4:
 380 00e5 6C6F6E67 		.ascii	"long int\000"
 380      20696E74 
 380      00
 381              	.LASF17:
 382 00ee 55415254 		.ascii	"UART_txBufferRead\000"
 382      5F747842 
 382      75666665 
 382      72526561 
 382      6400
 383              	.LASF10:
 384 0100 646F7562 		.ascii	"double\000"
 384      6C6500
 385              	.LASF19:
 386 0107 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 386      43313120 
 386      352E342E 
 386      31203230 
 386      31363036 
 387 013a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 387      20726576 
 387      6973696F 
 387      6E203233 
 387      37373135 
 388 016d 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 388      66756E63 
 388      74696F6E 
 388      2D736563 
 388      74696F6E 
 389              	.LASF3:
 390 0195 73686F72 		.ascii	"short unsigned int\000"
 390      7420756E 
 390      7369676E 
 390      65642069 
 390      6E7400
 391              	.LASF0:
 392 01a8 7369676E 		.ascii	"signed char\000"
 392      65642063 
 392      68617200 
 393              	.LASF22:
 394 01b4 55415254 		.ascii	"UART_TXISR\000"
 394      5F545849 
 394      535200
 395              	.LASF20:
 396 01bf 47656E65 		.ascii	"Generated_Source\\PSoC4\\UART_INT.c\000"
 396      72617465 
 396      645F536F 
 396      75726365 
 396      5C50536F 
 397              	.LASF14:
 398 01e1 6C6F6E67 		.ascii	"long double\000"
 398      20646F75 
 398      626C6500 
 399              	.LASF2:
 400 01ed 73686F72 		.ascii	"short int\000"
 400      7420696E 
 400      7400
ARM GAS  C:\Users\tdoan1\AppData\Local\Temp\ccVV4Oz1.s 			page 14


 401              	.LASF13:
 402 01f7 72656738 		.ascii	"reg8\000"
 402      00
 403              	.LASF15:
 404 01fc 73697A65 		.ascii	"sizetype\000"
 404      74797065 
 404      00
 405              	.LASF16:
 406 0205 55415254 		.ascii	"UART_txBuffer\000"
 406      5F747842 
 406      75666665 
 406      7200
 407              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
